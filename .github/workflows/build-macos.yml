name: Build macOS

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - '.github/workflows/build-macos.yml'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-macos:
    name: Build macOS
    runs-on: macos-latest
    strategy:
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: |
          echo "Building for macOS ${{ matrix.target }}"
          cargo build --release --target ${{ matrix.target }}
          echo "Build completed successfully"

      - name: Prepare binaries
        run: |
          mkdir -p release
          cp target/${{ matrix.target }}/release/rust-r2-cli release/
          cp target/${{ matrix.target }}/release/rust-r2-gui release/
          
          # Create archive with target name
          if [[ "${{ matrix.target }}" == "x86_64-apple-darwin" ]]; then
            tar czf rust-r2-macOS-x86_64.tar.gz -C release .
          else
            tar czf rust-r2-macOS-aarch64.tar.gz -C release .
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: rust-r2-macOS-${{ matrix.target }}
          path: rust-r2-macOS-*.tar.gz

