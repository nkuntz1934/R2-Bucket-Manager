name: Build macOS

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - '.github/workflows/build-macos.yml'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-macos:
    name: Build macOS
    runs-on: macos-latest
    permissions:
      contents: write
    strategy:
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get version and date
        id: metadata
        run: |
          VERSION=$(grep "^version" Cargo.toml | head -1 | cut -d'"' -f2)
          DATE=$(date +'%Y%m%d')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "date=$DATE" >> $GITHUB_OUTPUT
          echo "Version: $VERSION, Date: $DATE"

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: |
          echo "Building for macOS ${{ matrix.target }}"
          cargo build --release --target ${{ matrix.target }}
          echo "Build completed successfully"

      - name: Prepare release
        id: prepare
        run: |
          VERSION="${{ steps.metadata.outputs.version }}"
          DATE="${{ steps.metadata.outputs.date }}"
          
          if [[ "${{ matrix.target }}" == "x86_64-apple-darwin" ]]; then
            PLATFORM="macOS-Intel"
          else
            PLATFORM="macOS-ARM"
          fi
          
          ARCHIVE_NAME="rust-r2_v${VERSION}_${DATE}_${PLATFORM}.tar.gz"
          
          mkdir -p release
          cp target/${{ matrix.target }}/release/rust-r2-cli release/
          cp target/${{ matrix.target }}/release/rust-r2-gui release/
          cp README.md LICENSE release/
          
          tar czf "${ARCHIVE_NAME}" -C release .
          
          echo "archive_name=${ARCHIVE_NAME}" >> $GITHUB_OUTPUT
          echo "platform=${PLATFORM}" >> $GITHUB_OUTPUT
          echo "Created archive: ${ARCHIVE_NAME}"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.metadata.outputs.version }}-${{ steps.metadata.outputs.date }}-macOS-${{ matrix.target }}
          name: macOS ${{ steps.prepare.outputs.platform }} - v${{ steps.metadata.outputs.version }} (Build ${{ steps.metadata.outputs.date }})
          body: |
            ## macOS ${{ steps.prepare.outputs.platform }} Build
            
            **Version:** ${{ steps.metadata.outputs.version }}
            **Build Date:** ${{ steps.metadata.outputs.date }}
            **Architecture:** ${{ matrix.target }}
            
            ### Installation
            
            1. **Download and extract:**
            ```bash
            tar -xzf ${{ steps.prepare.outputs.archive_name }}
            ```
            
            2. **IMPORTANT: Bypass macOS Security Warning**
            
            Since the binaries are not code-signed, you'll see:
            > "rust-r2 cannot be opened because the developer cannot be verified"
            
            **Fix this by running:**
            ```bash
            xattr -cr rust-r2-*
            ```
            
            **Alternative methods:**
            - Right-click the app and select "Open" (instead of double-clicking)
            - Go to System Settings → Privacy & Security → click "Open Anyway"
            
            3. **Run the application:**
            ```bash
            ./rust-r2-gui  # For GUI
            ./rust-r2-cli  # For CLI
            ```
          files: ${{ steps.prepare.outputs.archive_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}