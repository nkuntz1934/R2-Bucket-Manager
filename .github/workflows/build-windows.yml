name: Build Windows

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - '.github/workflows/build-windows.yml'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-windows:
    name: Build Windows x64
    runs-on: windows-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get version and date
        id: metadata
        shell: powershell
        run: |
          $VERSION = (Select-String -Path Cargo.toml -Pattern '^version = "(.+)"' | ForEach-Object { $_.Matches[0].Groups[1].Value })
          $DATE = Get-Date -Format "yyyyMMdd"
          echo "version=$VERSION" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          echo "date=$DATE" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          echo "Version: $VERSION, Date: $DATE"

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: |
          echo "Building for Windows x64"
          cargo build --release --target x86_64-pc-windows-msvc
          echo "Build completed successfully"

      - name: Prepare release
        id: prepare
        shell: powershell
        run: |
          $VERSION = "${{ steps.metadata.outputs.version }}"
          $DATE = "${{ steps.metadata.outputs.date }}"
          $ARCHIVE_NAME = "rust-r2_v${VERSION}_${DATE}_Windows-x64.zip"
          
          New-Item -ItemType Directory -Force -Path release
          Copy-Item target\x86_64-pc-windows-msvc\release\rust-r2-cli.exe release\
          Copy-Item target\x86_64-pc-windows-msvc\release\rust-r2-gui.exe release\
          Copy-Item README.md release\
          Copy-Item LICENSE release\
          
          Compress-Archive -Path release\* -DestinationPath $ARCHIVE_NAME
          
          echo "archive_name=$ARCHIVE_NAME" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          echo "Created archive: $ARCHIVE_NAME"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.metadata.outputs.version }}-${{ steps.metadata.outputs.date }}-Windows-x64
          name: Windows x64 - v${{ steps.metadata.outputs.version }} (Build ${{ steps.metadata.outputs.date }})
          body: |
            ## Windows x64 Build
            
            **Version:** ${{ steps.metadata.outputs.version }}
            **Build Date:** ${{ steps.metadata.outputs.date }}
            **Architecture:** x86_64
            
            ### Installation
            
            1. **Download and extract the ZIP file**
            
            2. **IMPORTANT: Bypass Windows Security Warning**
            
            When you first run the app, Windows will show:
            > "Windows protected your PC - Microsoft Defender SmartScreen prevented an unrecognized app from starting"
            
            **To fix this:**
            - Click **"More info"**
            - Click **"Run anyway"**
            
            **Alternative method:**
            - Right-click the .exe file → Properties
            - Check **"Unblock"** at the bottom
            - Click **Apply** → **OK**
            
            3. **Run the application:**
            - Double-click `rust-r2-gui.exe` for the GUI application
            - Run `rust-r2-cli.exe` from Command Prompt or PowerShell for CLI usage
          files: ${{ steps.prepare.outputs.archive_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}